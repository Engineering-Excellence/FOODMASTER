<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="kr.or.sw.mapper.CustomerDAOImpl">
    <select id="selectMenuInfo" resultType="kr.or.sw.model.ProductDTO">
        SELECT PRODUCTID,
               PRODUCTNAME,
               CATEGORY,
               PRICE
        FROM PRODUCT
        WHERE PRODUCTID IN (SELECT P.PRODUCTID
                            FROM PRODUCT P
                                     JOIN PRODUCT_STOCK PS
                                          ON P.PRODUCTID = PS.PRODUCTID
                            GROUP BY P.PRODUCTID)
        ORDER BY PRODUCTID ASC
    </select>

    <select id="selectAllImgList" resultType="kr.or.sw.model.ProductImgDTO">
        SELECT UUID,
        RELPATH,
        FILENAME,
        PRODUCTID
        FROM PRODUCTIMG
        ORDER BY PRODUCTID ASC
    </select>

    <update id="insertSale" parameterType="java.util.Map">
        DECLARE
        -- 판매기록 ID 저장변수 선언
        v_saleid NUMBER;

        BEGIN
        -- 판매기록 추가
        INSERT INTO SALE (SALEID, INCOME, ASSETS, SALEDATE, MEMBERID, ACCOUNTID)
        VALUES (SALEID_SEQ.nextval, 0, 0, SYSDATE, #{memberID}, 'account')
        RETURNING SALEID INTO v_saleid;

        <foreach collection="productDTOList" item="item" separator=" " index="index">
            -- 수입 누적
            UPDATE /*+ NO_PARALLEL(SALE) */ SALE
            SET INCOME = INCOME + #{item.price}
            WHERE SALEID = v_saleid;

            -- 상품 재고 감소
            UPDATE PRODUCT
            SET QUANTITY = QUANTITY - #{item.quantity}
            WHERE PRODUCTID = #{item.productID};

            -- 상품 감소에 따른 재료 감소
            UPDATE STOCK S
            SET S.QUANTITY = S.QUANTITY - NVL(
            (SELECT #{item.quantity} * PS.QUANTITY
            FROM PRODUCT_STOCK PS
            WHERE PS.STOCKID = S.STOCKID
            AND PS.PRODUCTID = #{item.productID}
            ), 0)
            WHERE S.STOCKID IN (
            SELECT PS.STOCKID
            FROM PRODUCT_STOCK PS
            );
        </foreach>

        -- 보유금 증가
        UPDATE /*+ NO_PARALLEL(BALANCE), NO_PARALLEL(SALE) */ BALANCE
        SET ASSETS = ASSETS + (

        SELECT INCOME
        FROM (SELECT /*+ NO_PARALLEL(SALE) */ INCOME FROM SALE ORDER BY SALEID DESC)
        WHERE ROWNUM = 1
        ),
        LASTUPDATED = SYSDATE;

        -- 판매 직후 보유금 기록
        UPDATE SALE
        SET ASSETS = (SELECT ASSETS FROM BALANCE)
        WHERE SALEID = v_saleid;

        COMMIT;

        -- 예외 처리
        EXCEPTION
        WHEN OTHERS THEN
        ROLLBACK;
        RAISE;
        END;
    </update>
</mapper>